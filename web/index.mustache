<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
  <title>Bootstrap demo</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
  <style>
    * {
      touch-action: manipulation;
    }

    #position button,
    #state label,
    #switch select {
      width: 100%;
      height: 40px;
      margin: 5px;
    }

    .nav-item {
      margin-left: 10px;
    }

    span.badge {
      margin: 5px;
      font-size: large;
      display: block;
    }
  </style>
</head>

<body>
  <ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
      <button class="nav-link active" id="operacion-tab" data-bs-toggle="tab" data-bs-target="#operacion-tab-pane" type="button" role="tab" aria-controls="operacion-tab-pane" aria-selected="true">Operacion</button>
    </li>
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="config-tab" data-bs-toggle="tab" data-bs-target="#config-tab-pane" type="button" role="tab" aria-controls="config-tab-pane" aria-selected="false">Config</button>
    </li>
  </ul>
  <div class="tab-content">
    <div class="tab-pane fade show active" id="operacion-tab-pane" role="tabpanel" aria-labelledby="operacion-tab" tabindex="0">
      {{#vias}}
      <span class="badge text-bg-success">{{name}}</span>
      {{#servos}}
      <div id="state" class="d-flex align-items-center">
        <label class="btn">{{desc}}</label>
        <input type="radio" class="btn-check selector" name="{{id}}" value="0" id="selector_{{id}}_r" autocomplete="off" checked>
        <label class="btn btn-outline-primary" for="selector_{{id}}_r">Recto</label>
        <input type="radio" class="btn-check selector" name="{{id}}" value="1" id="selector_{{id}}_d" autocomplete="off">
        <label class="btn btn-outline-primary" for="selector_{{id}}_d">Desviado</label>
      </div>
      {{/servos}}
      {{/vias}}
    </div>
    <div class="tab-pane fade show" id="config-tab-pane" role="tabpanel" aria-labelledby="config-tab" tabindex="1">
      <div class="d-flex flex-row">
        <select id="switch" class="form-select form-select mb-3" aria-label="Large select example">
          {{#vias}}
          {{#servos}}
          <option value="{{id}}">{{name}} - {{desc}}</option>
          {{/servos}}
          {{/vias}}
        </select>
      </div>
      <div id="state" class="d-flex flex-row">
        <input value="0" type="radio" class="btn-check" name="selector_cfg" id="selector_cfg_r" autocomplete="off" checked>
        <label class="btn btn-outline-primary" for="selector_cfg_r">Recto</label>
        <input value="1" type="radio" class="btn-check" name="selector_cfg" id="selector_cfg_d" autocomplete="off">
        <label class="btn btn-outline-primary" for="selector_cfg_d">Desviado</label>
      </div>
      <div id="position" class="d-flex flex-row">
        <button offset="-10" type="button" class="offset_bt btn btn-outline-primary">-10</button>
        <button offset="-1" type="button" class="offset_bt btn btn-outline-primary">-1</button>
        <button id="value" type="button" class="btn btn-outline-success" disabled>90</button>
        <button offset="+1" type="button" class="offset_bt btn btn-outline-primary">+1</button>
        <button offset="+10" type="button" class="offset_bt btn btn-outline-primary">+10</button>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


  <script>
    const status = [0, 0, 0, 0, 0, 0, 0];
    const selector_list = document.getElementsByClassName("selector");
    for (let selector of selector_list) {
      selector.addEventListener('change', selectorChange);
    }

    function selectorChange(event) {
      // alert(event.target.value);
      status[event.target.name] = event.target.value;
      document.getElementById("status").innerText = status.join(",");
    }
  </script>


  <script>
    const config = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]];
    const list = document.getElementsByClassName("offset_bt");

    for (let item of list) {
      item.addEventListener('click', updateValue);
    }

    function updateValue(event) {
      const value = document.getElementById("value");
      const newVal = parseInt(value.innerHTML) + parseInt(event.target.getAttribute("offset"));
      if (between(newVal, 0, 180)) {
        value.innerText = newVal;

        const servo = document.getElementById("switch").value;
        var state = document.querySelector('input[name = selector_cfg]:checked').value;
        console.log(servo + " " + state);

        config[servo][state] = newVal;
        document.getElementById("config").innerText = config.join(",");
      }

    }

    function between(x, min, max) {
      return x >= min && x <= max;
    }

  </script>
  <hr>
  <pre>status: <span id="status"></span></pre>
  <pre>config: <span id="config"></span></pre>
  <pre>#######</pre>
</body>

</html>